{"ast":null,"code":"var _jsxFileName = \"/Users/yi/Desktop/React/nutritiontable-main/nutrition-table/src/components/TableItems/NutritionTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { NutritionCell } from '../../components/TableItems/NutritionCell';\nimport { ModalBox } from '../../components/modals/ModalBox';\nimport { Button } from '../../components/StyledComponents/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NutritionTable = ({\n  data,\n  deleteItem,\n  addItem,\n  sortData\n}) => {\n  _s();\n\n  const [selected, setSelected] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n\n  const onClose = () => {\n    setShowModal(false);\n  };\n\n  const onConfirm = (name, cal, fat, carb, pro) => {\n    const nid = data.map(i => parseInt(i.id));\n    const newItem = {\n      id: (Math.max(...nid) + 1).toString(),\n      dessert: name,\n      nutritionInfo: {\n        calories: cal,\n        fat,\n        carb,\n        protein: pro\n      }\n    };\n    addItem(newItem);\n    setShowModal(false);\n  };\n\n  const selectAll = () => {\n    if (selected.length === 0) setSelected(data.map(item => item.id));else setSelected([]);\n  };\n\n  const setSelections = e => {\n    if (selected.includes(e.target.value)) {\n      setSelected(selected.filter(item => item !== e.target.value));\n    } else {\n      setSelected(Array.from(new Set([...selected, e.target.value])));\n    }\n  };\n\n  useEffect(() => {\n    setSelected([]);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-tools\",\n      className: \"page-tools\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-selected\",\n        children: [selected.length, \" Selected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-controls\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowModal(true),\n          buttonStyle: \"Bordlerless\",\n          className: \"btn btn-add\",\n          type: \"button\",\n          id: \"pre-page-add\",\n          \"data-testid\": \"pre-page-add\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon-pencil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), \" Add New\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: selected.length <= 0,\n          onClick: () => deleteItem(selected),\n          buttonStyle: \"Bordlerless\",\n          className: `btn btn-delete  ${selected.length <= 0 ? \"disabled\" : \"\"}`,\n          type: \"button\",\n          id: \"pre-page-delete\",\n          \"data-testid\": \"pre-page-delete\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon-remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), \" Delete\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block-section\",\n      children: data && data.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-hover\",\n        \"data-testid\": \"data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          sorting: true,\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"span1 text-center sorting_asc\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                \"data-testid\": \"check_selectAll\",\n                checked: selected.length === data.length,\n                type: \"checkbox\",\n                onClick: () => selectAll()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"span1 text-center sorting\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                className: \"sortText\",\n                onClick: () => sortData(),\n                children: \"Dessert (100g serving)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Calories (g)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"hidden-phone\",\n              children: \"Fat (g)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"hidden-phone\",\n              children: \"Carbs (g)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"hidden-phone\",\n              children: \"Protein (g)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map(row => {\n            return /*#__PURE__*/_jsxDEV(NutritionCell, {\n              preSelect: selected.includes(row.id),\n              id: row.id,\n              setSelected: setSelections,\n              name: row.dessert,\n              nutritionInfo: row.nutritionInfo\n            }, row.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), showModal && /*#__PURE__*/_jsxDEV(ModalBox, {\n      show: showModal,\n      onClose: onClose,\n      onConfirm: onConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NutritionTable, \"/i2Oz7yxfrzDeNcRJ0CYZ7igBc8=\");\n\n_c = NutritionTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"NutritionTable\");","map":{"version":3,"sources":["/Users/yi/Desktop/React/nutritiontable-main/nutrition-table/src/components/TableItems/NutritionTable.tsx"],"names":["React","useState","useEffect","NutritionCell","ModalBox","Button","NutritionTable","data","deleteItem","addItem","sortData","selected","setSelected","showModal","setShowModal","onClose","onConfirm","name","cal","fat","carb","pro","nid","map","i","parseInt","id","newItem","Math","max","toString","dessert","nutritionInfo","calories","protein","selectAll","length","item","setSelections","e","includes","target","value","filter","Array","from","Set","row"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useEffect} from 'react';\nimport {NutritionCell} from '../../components/TableItems/NutritionCell'\nimport {ModalBox} from '../../components/modals/ModalBox'\nimport {Button} from '../../components/StyledComponents/Button'\n\nexport const NutritionTable = ({data, deleteItem, addItem, sortData})=> {\n    const [selected, setSelected] = useState<string[]>([]);\n    const [showModal, setShowModal] = useState(false);\n\n    const onClose=()=>{\n        setShowModal(false);\n    }\n\n    const onConfirm=(name,cal, fat, carb, pro)=>{\n        const nid = (data.map((i)=>parseInt(i.id)));\n        const newItem = {id: (Math.max(...nid)+1).toString(),dessert: name, nutritionInfo: {calories: cal, fat, carb, protein: pro}}\n        addItem(newItem)\n        setShowModal(false);\n    }\n\n    const selectAll = () =>{\n        if(selected.length===0)\n            setSelected(data.map(item=>item.id))\n        else\n            setSelected([])\n    }\n\n    const setSelections =(e)=>{\n        if(selected.includes(e.target.value)){\n            setSelected(selected.filter(item=>item!==e.target.value))\n        }else{\n            setSelected(Array.from(new Set([...selected,e.target.value])))\n        }\n    }\n\n    useEffect(()=>{\n            setSelected([]);\n    },[data])\n\n  return (\n  <>\n    <div data-testid=\"page-tools\" className=\"page-tools\">\n        <div className=\"page-selected\">{selected.length} Selected</div>\n        <div className=\"page-controls\">\n            <Button onClick={()=> setShowModal(true)} buttonStyle=\"Bordlerless\" className=\"btn btn-add\" type=\"button\" id=\"pre-page-add\" data-testid=\"pre-page-add\">\n                <i className=\"icon-pencil\" /> Add New\n            </Button>\n\n            <Button disabled={selected.length<=0} onClick={()=>deleteItem(selected)} buttonStyle=\"Bordlerless\" className={`btn btn-delete  ${selected.length<=0?\"disabled\":\"\"}`} type=\"button\" id=\"pre-page-delete\" data-testid=\"pre-page-delete\">\n                <i className=\"icon-remove\" /> Delete\n            </Button>\n        </div>\n    </div>\n\n    <div className=\"block-section\">\n\n     {data && data.length > 0 &&\n        <table className=\"table table-hover\" data-testid=\"data-table\">\n            <thead sorting>\n                <tr>\n                    <th className=\"span1 text-center sorting_asc\">\n                        <input data-testid=\"check_selectAll\" checked={selected.length===data.length} type=\"checkbox\" onClick={()=> selectAll()} />\n                    </th>\n                    <th className=\"span1 text-center sorting\"><a href=\"#\" className=\"sortText\" onClick={()=>sortData()}>Dessert (100g serving)</a></th>\n                    <th>Calories (g)</th>\n                    <th className=\"hidden-phone\">\n                        Fat (g)\n                    </th>\n                    <th className=\"hidden-phone\">Carbs (g)</th>\n                    <th className=\"hidden-phone\">Protein (g)</th>\n                </tr>\n            </thead>\n            <tbody>\n            {data.map((row)=>{\n                return <NutritionCell key={row.id} preSelect={selected.includes(row.id)} id={row.id} setSelected={setSelections} name={row.dessert} nutritionInfo={row.nutritionInfo} />\n            })        \n            }\n            </tbody>\n        </table>\n    }\n    </div>\n    {showModal && <ModalBox show={showModal} onClose={onClose} onConfirm={onConfirm}/>}\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}