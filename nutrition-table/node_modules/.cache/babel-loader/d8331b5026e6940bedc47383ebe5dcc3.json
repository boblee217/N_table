{"ast":null,"code":"var _jsxFileName = \"/Users/yi/Desktop/React/nutritiontable-main/nutrition-table/src/pages/MainView/MainView.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Button } from '../../components/StyledComponents/Button';\nimport { NutritionTable } from '../../components/TableItems/NutritionTable';\nimport { AppContext } from '../../Context/AppContext';\nimport './MainView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainView = () => {\n  _s();\n\n  const context = useContext(AppContext);\n  const [dataTable, setDataTable] = useState(context.dataTable);\n  const [asc, setAsc] = useState(true);\n  useEffect(() => {\n    if (context.dataTable) setDataTable(context.dataTable);\n  }, [context.dataTable]);\n\n  const resetData = () => {\n    setDataTable(context.dataTable);\n  };\n\n  const deleteItem = selected => {\n    setDataTable(dataTable.filter(el => !selected.includes(el.id)));\n  };\n\n  const addItem = newItem => {\n    setDataTable([...dataTable, newItem]);\n  };\n\n  const sortData = () => {\n    if (asc) setDataTable(dataTable.slice().sort((a, b) => a.dessert > b.dessert ? 1 : -1));else setDataTable(dataTable.slice().sort((a, b) => a.dessert > b.dessert ? -1 : 1));\n    setAsc(!asc);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-container\",\n    className: \"full-width\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"pre-page-content\",\n      \"data-testid\": \"pre-page-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pre-page-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Nutrition List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pre-page-reset\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          buttonStyle: \"Bordlerless\",\n          onClick: () => resetData(),\n          className: \"btn btn-reset\",\n          type: \"button\",\n          id: \"pre-page-reset\",\n          \"data-testid\": \"pre-page-reset\",\n          children: \"Reset Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"page-content\",\n      children: /*#__PURE__*/_jsxDEV(NutritionTable, {\n        sortData: sortData,\n        addItem: addItem,\n        deleteItem: deleteItem,\n        data: dataTable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainView, \"aG6jKcZEAoVMAAUsORzBb0pEJUY=\");\n\n_c = MainView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainView\");","map":{"version":3,"sources":["/Users/yi/Desktop/React/nutritiontable-main/nutrition-table/src/pages/MainView/MainView.tsx"],"names":["React","useContext","useEffect","useState","Button","NutritionTable","AppContext","MainView","context","dataTable","setDataTable","asc","setAsc","resetData","deleteItem","selected","filter","el","includes","id","addItem","newItem","sortData","slice","sort","a","b","dessert"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect,useState} from 'react';\nimport {Button} from '../../components/StyledComponents/Button'\nimport {NutritionTable} from '../../components/TableItems/NutritionTable'\nimport { AppContext } from '../../Context/AppContext';\nimport './MainView.css';\n\nexport const MainView = ()=> {\n    const context = useContext(AppContext);\n    const [dataTable, setDataTable] = useState(context.dataTable);\n    const [asc, setAsc] = useState(true);\n\n    useEffect(()=>{\n        if(context.dataTable)\n            setDataTable(context.dataTable);\n    },[context.dataTable])\n\n    const resetData = () => {\n        setDataTable(context.dataTable);\n    }\n\n    const deleteItem = (selected)=> {\n        setDataTable(dataTable.filter( ( el ) => !selected.includes( el.id )))\n    }\n\n    const addItem = (newItem) =>{\n        setDataTable([...dataTable,newItem])\n    }\n\n    const sortData = ()=>{\n        if(asc)\n            setDataTable(dataTable.slice().sort((a, b) => (a.dessert > b.dessert) ? 1 : -1));\n        else\n            setDataTable(dataTable.slice().sort((a, b) => (a.dessert > b.dessert) ? -1 : 1));\n        setAsc(!asc);\n    }\n\n  return (\n    <div id=\"page-container\" className=\"full-width\">\n        <div id=\"pre-page-content\" data-testid=\"pre-page-content\">\n            <div className=\"pre-page-title\">\n            <h1>\n                Nutrition List\n            </h1>\n            </div>\n\n            <div className=\"pre-page-reset\">\n                <Button buttonStyle=\"Bordlerless\" onClick={()=>resetData()} className=\"btn btn-reset\" type=\"button\" id=\"pre-page-reset\" data-testid=\"pre-page-reset\">\n                    Reset Data\n                </Button>\n            </div>\n        </div>\n        \n        <div id=\"page-content\">\n                <NutritionTable sortData={sortData} addItem={addItem} deleteItem={deleteItem} data={dataTable}/>\n        </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}